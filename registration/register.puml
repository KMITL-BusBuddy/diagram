@startuml user_registration

hide footbox

actor User
participant "Register Page" as UI
participant "Django\nURL Dispatcher" as API
participant "Register\nView" as view_register
participant "User\nSerializer" as serializer_user
participant "Email\nService" as email_service
database "users" as table_users

activate User
activate UI
User -> UI: Enter username, email & password
User -> UI: Tap Register button

UI -> UI: Validate input

alt Valid input
    UI -> API: POST /register \n(username, email, password)
    activate API

    API -> view_register: post(request)
    activate view_register

    view_register -> serializer_user: validate(data)
    activate serializer_user

    serializer_user -> table_users: check_duplicate_email
    activate table_users

    table_users --> serializer_user: email_available / error
    deactivate table_users

    serializer_user --> view_register: valid_data / error
    deactivate serializer_user

    alt Email available
        view_register -> table_users: create_user(username, email, password, is_active=False)
        activate table_users

        table_users --> view_register: user_created
        deactivate table_users

        view_register -> email_service: send_verification_email(user)
        activate email_service

        email_service --> view_register: email_sent
        deactivate email_service

        view_register --> API: 201 Created (verification_pending)
        deactivate view_register

        API --> UI: 201 Created (verification_pending)
        deactivate API

        UI --> User: Show "User registered successfully, confirmation email sent."
        deactivate UI
    end
end

deactivate User

@enduml
