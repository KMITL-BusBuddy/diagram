@startuml registration

hide footbox

actor User
participant "Register Page" as UI
participant "Django\nURL Dispatcher" as API
participant "RegisterView" as view_register
participant "UserSerializer" as serializer_user
participant "Email Service" as email_service
database "users" as table_users

== User Registration ==
activate User
activate UI
User -> UI: Enter username , email & password
User -> UI: Tap Register button

UI -> UI: Validate input

alt Valid input
    UI -> API: POST /register (username,email, password)
    activate API

    API -> view_register: post(request)
    activate view_register

    view_register -> serializer_user: validate(data)
    activate serializer_user

    serializer_user -> table_users: check_duplicate_email
    activate table_users

    table_users --> serializer_user: email_available / error
    deactivate table_users

    serializer_user --> view_register: valid_data / error
    deactivate serializer_user

    alt Email available
        view_register -> table_users: create_user(email, password, is_active=False)
        activate table_users

        table_users --> view_register: user_created
        deactivate table_users

        view_register -> email_service: send_verification_email(user)
        activate email_service

        email_service --> view_register: email_sent
        deactivate email_service

        view_register --> API: 201 Created (verification_pending)
        deactivate view_register
        deactivate API

        UI -> User: Show "Check your email to verify your account."

        deactivate view_register
        deactivate API

    end
end

deactivate UI
deactivate User

== Email Verification ==
User -> email_service: Click verification link
email_service -> API: GET auth/account-confirm-email/<str:key>/
activate API

API -> view_register: verify_email(token)
activate view_register

view_register -> table_users: activate_user(token)
activate table_users

table_users --> view_register: user_activated
deactivate table_users

view_register --> API: 200 OK (email_verified)
deactivate view_register
deactivate API


== User Login ==
activate User
activate UI
User -> UI: Enter username & password
User -> UI: Tap Login button

UI -> UI: Validate input

alt Valid input
    UI -> API: POST auth/login/ (username, password)
    activate API

    API -> view_register: post(request)
    activate view_register

    view_register -> serializer_user: validate(data)
    activate serializer_user

    serializer_user -> table_users: check_credentials(email, password, is_active=True)
    activate table_users

    table_users --> serializer_user: user_data
    deactivate table_users

    serializer_user --> view_register: valid_user / error
    deactivate serializer_user

    alt Authentication successful
        view_register -> view_register: create_session(user)
        view_register --> API: 200 OK (jwt token)
        deactivate view_register
        deactivate API

        UI -> UI: Navigate to HomePage
    else Authentication failed
        view_register --> API: 401 Unauthorized
        deactivate view_register
        deactivate API

        UI -> User: Show error message
    end
end

deactivate UI
deactivate User

@enduml
