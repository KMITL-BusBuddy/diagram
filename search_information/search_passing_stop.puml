@startuml

actor User
participant SearchScreen
participant "Stop API" as StopAPI
participant "RouteDetailScreen" as RouteDetailScreen
participant "MapScreen" as RouteMapScreen

== Method 1: Search by Typing ==
User -> SearchScreen : startTypingSearchQuery(query)
SearchScreen -> StopAPI : searchBusStops(query)
StopAPI -> SearchScreen : returnSearchResults(busStops)
SearchScreen -> User : displaySearchResults(busStops)

User -> SearchScreen : clickSearchResult(busStop)
SearchScreen -> RouteDetailScreen : navigateToRouteDetailScreen(busStop)
RouteDetailScreen -> StopAPI : getRoutesForBusStop(busStop)
StopAPI -> RouteDetailScreen : returnRoutesPassingBusStop(routes)
RouteDetailScreen -> RouteDetailScreen : displayRoutesPassingBusStop(routes)
RouteDetailScreen -> RouteMapScreen : displayRouteOnMap(routes)
RouteMapScreen -> User : showRouteOnMap(routes)

== Method 2: Select Bus Stop on Map ==
User -> SearchScreen : clickSelectBusStopButton()
SearchScreen -> SelectMapScreen : navigateToSelectMapScreen()
User -> SelectMapScreen : selectBusStopOnMap(busStopLocation)
SelectMapScreen -> SearchScreen : returnToSearchScreenWithSelectedBusStop(busStopLocation)
SearchScreen -> SearchScreen : updateSearchFieldsWithBusStop(busStopLocation)
SearchScreen -> User : displayUpdatedSearchFields(busStop)

User -> SearchScreen : clickSearchResult(busStop)
SearchScreen -> RouteDetailScreen : navigateToRouteDetailScreen(busStop)
RouteDetailScreen -> StopAPI : getRoutesForBusStop(busStop)
StopAPI -> RouteDetailScreen : returnRoutesPassingBusStop(routes)
RouteDetailScreen -> RouteDetailScreen : displayRoutesPassingBusStop(routes)
RouteDetailScreen -> RouteMapScreen : displayRouteOnMap(routes)
RouteMapScreen -> User : showRouteOnMap(routes)

@enduml
