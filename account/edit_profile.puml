@startuml profile

hide footbox

actor User
participant "Edit Profile\nPage" as UI
participant "Django\nURL Dispatcher" as API
participant "EditProfile\nView" as view_edit_profile
participant "User\nSerializer" as serializer_user
database "user" as table_users

User -> UI: Open Edit Profile Page
activate User
activate UI
UI -> API: GET /profile
activate API

API -> view_edit_profile: get(request)
activate view_edit_profile

view_edit_profile -> serializer_user: get_user_data
activate serializer_user

serializer_user -> table_users: retrieve_user_data
activate table_users

table_users --> serializer_user: user_data
deactivate table_users

serializer_user --> view_edit_profile: user_data
deactivate serializer_user

view_edit_profile --> API: 200 OK (user_details)
deactivate view_edit_profile
API --> UI: user_data
deactivate API
UI -> User: Display user details

opt Edit Profile
    User -> UI: Modify username or email
    User -> UI: Tap "Save" button
    UI -> API: POST /profile/edit \nwith new details
    activate API

    API -> view_edit_profile: post(request)
    activate view_edit_profile

    view_edit_profile -> serializer_user: validate_and_update(data)
    activate serializer_user

    serializer_user -> table_users: update_user_details
    activate table_users

    table_users --> serializer_user: updated_user_data
    deactivate table_users

    serializer_user --> view_edit_profile: status
    deactivate serializer_user

    view_edit_profile --> API: response()
    deactivate view_edit_profile

    API --> UI: status_code
    deactivate API
    UI -> User: Show success or error notification
    deactivate UI
end

deactivate User
' User -> UI: Modify username or email
' User -> UI: Tap "Save" button
' UI -> API: POST /profile/edit (new details)
' activate API

' API -> view_edit_profile: post(request)
' activate view_edit_profile

' view_edit_profile -> serializer_user: validate_and_update(data)
' activate serializer_user

' serializer_user -> table_users: update_user_details
' activate table_users

' table_users --> serializer_user: updated_user_data
' deactivate table_users

' serializer_user --> view_edit_profile: update_success / error
' deactivate serializer_user

' view_edit_profile --> API: 200 OK / 400 Bad Request
' deactivate view_edit_profile
' deactivate API

' UI -> User: Show success or error notification

' == Logout Scenario ==
' User -> UI: Tap "Logout" button
' UI -> API: POST /auth/logout
' activate API

' API -> view_edit_profile: logout(request)
' activate view_edit_profile

' view_edit_profile --> API: 200 OK (logout success)
' deactivate view_edit_profile
' deactivate API

' UI -> User: Redirect to login page

@enduml
