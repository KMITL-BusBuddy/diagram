@startuml feed_page

hide footbox

actor User
participant "Feed Page" as UI
participant "Django\nURL Dispatcher" as API
participant "Post\nView" as view
participant "Post\nSerializer" as serializer
database "post" as table_posts
database "like" as table_likes
database "comment" as table_comments

activate User
activate UI
User -> UI: Tap a General News Post
User -> UI: Tap a Station News Post

UI -> API: GET /posts
activate API

API -> view: get(request)
activate view

view -> serializer: get_data
activate serializer

serializer -> table_posts: get_post
activate table_posts

table_posts --> serializer: post_data
deactivate table_posts

serializer --> view: post_data
deactivate serializer

view --> API: response()
deactivate view

API --> UI: Return post details
deactivate API

UI --> User: Display post details

opt Tab Like
    User -> UI: Tap Like
    UI -> API: POST /post/like (post_id)
    activate API

    API -> view: post(post_id)
    activate view
    view -> serializer: post(request)
    activate serializer
    serializer -> table_likes: serializer(query_set)
    activate table_likes
    table_likes --> serializer: like_status
    deactivate table_likes
    serializer --> view: like_status
    deactivate serializer
    view --> API: response()
    deactivate view
    API -> UI: Return like status
    UI -> User: Update like count UI
else Add Comment 
    U
else Add Comment
    User -> UI: Add Comment
    UI -> API: POST post/comment (post_id, comment)
    API -> table_comments: store_comment(post_id, comment)
    activate table_comments
    table_comments --> API: updated_comments
    deactivate table_comments
    API -> UI: Return updated comments
    UI -> User: Update comment section
    deactivate UI
end

deactivate User

@enduml
