@startuml upload_post

hide footbox

actor User
participant "Upload Post Page" as UI
participant "Django\nURL Dispatcher" as API
participant "UploadPost\nView" as view_upload_post
participant "Post\nSerializer" as serializer_post
database "post" as table_posts
participant "Image\nService" as image_service

activate User
activate UI
User -> UI: Open Upload Post Page
UI -> User: Display post form


User -> UI: Enter post text, select urgency, add tags
User -> UI: Upload an image (optional)

UI -> UI: Validate inputs

alt Valid input
    User -> UI: Tap 'Post'
    UI -> API: POST posts/create/ (text, image)
    activate API

    API -> view_upload_post: post(request)
    activate view_upload_post

    view_upload_post -> serializer_post: validate(data)
    activate serializer_post

    serializer_post -> table_posts: check_duplicate_post(text, user_id)
    activate table_posts

    table_posts --> serializer_post: post_available / error
    deactivate table_posts

    serializer_post --> view_upload_post: valid_data / error
    deactivate serializer_post

    alt 
        alt Image included
            view_upload_post -> image_service: upload_image(image)
            activate image_service
            image_service --> view_upload_post: image_url
            deactivate image_service
        end

        view_upload_post -> table_posts: create_post(text, image_url)
        activate table_posts

        table_posts --> view_upload_post: post_created
        deactivate table_posts

        view_upload_post --> API: 201 Created (post_success)

        UI -> User: Show success message
    else Invalid post data
        view_upload_post --> API: 400 Bad Request (error)
        deactivate view_upload_post
        API --> UI: error
        deactivate API
        UI -> User: Show error message
    end
else Invalid input
    UI -> User: Show validation errors
    deactivate UI
end

deactivate User

@enduml
